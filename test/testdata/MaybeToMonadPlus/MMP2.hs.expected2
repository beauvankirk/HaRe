module MMP2 where
import Control.Monad

f :: Int -> Maybe String
f i =
  if (i == 0)
    then return (show i)
    else Nothing

f2 :: (Show a, MonadPlus m) => (m a -> Maybe a) -> m a -> IO ()
f2 f = f2_old . f
   where
	f2_old :: Maybe a -> IO ()
   	f2_old m =
   	  case m of
  	  Nothing -> putStrLn "Something went wrong"
  	  (Just i) -> putStrLn $ "The result is: " ++ (show i)
